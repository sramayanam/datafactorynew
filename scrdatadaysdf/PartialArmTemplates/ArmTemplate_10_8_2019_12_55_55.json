{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "scrdatadaysdf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DeltaCopyfromORA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy new or updated rows only from database using external control table",
				"activities": [
					{
						"name": "LookupLastWaterMark",
						"description": "Retrieve  the last high-watermark value stored in external control table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select @{pipeline().parameters.Control_Table_Column_Name} as WatermarkValue from @{pipeline().parameters.Control_Table_Table_Name}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseExternal_ControlTable1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LookupCurrentWaterMark",
						"description": "Retrieve  the current maximum value in watermark column of source data store",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT\nMAX(@{pipeline().parameters.Data_Source_WaterMarkColumn}) as NewWatermarkValue\nfrom @{pipeline().parameters.Data_Source_Table_Name}",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OracleDataSource1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "DeltaCopyfromDB",
						"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupCurrentWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupLastWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "AzureBlobFSSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_eqk",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AzureBlobFSDataDestination1",
								"type": "DatasetReference",
								"parameters": {
									"FolderPath": {
										"value": "@pipeline().parameters.Data_Destination_Folder_Path",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "UpdateWaterMark",
						"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeltaCopyfromDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue",
										"type": "Expression"
									},
									"type": "datetime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQLControlDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"Data_Source_Table_Name": {
						"type": "String",
						"defaultValue": "orders"
					},
					"Data_Source_WaterMarkColumn": {
						"type": "String",
						"defaultValue": "order_date"
					},
					"Data_Destination_Folder_Path": {
						"type": "String",
						"defaultValue": "/rawdata/orders/"
					},
					"Control_Table_Table_Name": {
						"type": "String",
						"defaultValue": "watermarktable"
					},
					"Control_Table_Column_Name": {
						"type": "String",
						"defaultValue": "WatermarkValue"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Extract_OnPremData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_postgres_to_datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.orders"
							},
							{
								"name": "Destination",
								"value": "rawdata//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "order_id",
											"type": "Int16"
										},
										"sink": {
											"name": "order_id",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "customer_id",
											"type": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "employee_id",
											"type": "Int16"
										},
										"sink": {
											"name": "employee_id",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "order_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "required_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "required_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "shipped_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "shipped_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ship_via",
											"type": "Int16"
										},
										"sink": {
											"name": "ship_via",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "freight",
											"type": "Single"
										},
										"sink": {
											"name": "freight",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "ship_name",
											"type": "String"
										},
										"sink": {
											"name": "ship_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship_address",
											"type": "String"
										},
										"sink": {
											"name": "ship_address",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship_city",
											"type": "String"
										},
										"sink": {
											"name": "ship_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship_region",
											"type": "String"
										},
										"sink": {
											"name": "ship_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "ship_postal_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship_country",
											"type": "String"
										},
										"sink": {
											"name": "ship_country",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_eqk",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_eqk",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		}
	]
}